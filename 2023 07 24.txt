oop(object oriented programming)
객체, 사물, 물체 / 지향하다(목표로 한다) / 코딩 방법

객체 : 키보드, 옆집아저씨, 나, 미세먼지, 모래한알, 등등
--> 독립적으로 각각 구분해서 인식할 수 있는 모든 것

객체 지향
--> 독립적으로 각각 구분해서 인식할 수 있도록 프로그래밍하는 것을 목표로 한다.

캡슐화 : 외부로부터의 보호, 정보 은닉

추상화 : 공통된 코드만 작성, 개별적인 것은 모두 제거

상속 : 공통된 것을 가져온다 -> 코드길이 감소, 코드의 재사용성 증가

*중요* 다형성 : 다향한 형태를 지닐 수 있음 (메타몽)

속성(값, data) : 변수 ex) 이름, 나이, 생년월일, 키, 몸무게, 시력, 주민번호 == 명사
기능(동작, 행동) : 메서드 ex) 밥을 먹는다, 잠을잔다, 출근한다, 퇴근한다 == 동사

모니터 <- class
-속성 : 크기, 화소, 주사율 <- 변수
-기능 : 화면을 보여준다, 밝기를 조절한다, 화면을 끈다 <- 메서드

MVC(Model View Controller)
VO(Value Object)

'피피티 [ ] 는 생략가능'

" ~ " : 틸드(tilde)

public : 누구나 쓸 수 있음, 어디서든지 import 가능
(default) : 외부패키지에서 사용 못 함(접근 금지)
	같은 패키지 내에서만 사용 가능

***** 자바에서의 각 변수의 특징 *****
1. 클랙스 변수
static으로 선언된 멤버변수, 프로그램 실행시 정적 메모리 영역에 자동 할당되며,
프로그램 종료시 자동 소멸되는 변수

2. 인스턴스 변수
new 연산자에 의해서 동적 메모리(Heap)에
할당되는 객체(인스턴스)안에 할당되는 this에 의해 참조된다.
가비지콜렉터에 의해 삭제된다.

3. 지역 변수
메소드 또는 제어문 안에서 선언된 변수로
스택(Stack)에 할당되었다가
메소드 or 제어문 종료 시 소멸


필드에서는 private 접근제한자가 원칙이다.
final == 상수(한 번 정하면 변하지 않음)

crtl + 좌클릭 : 클릭부분의 출처 찾아가기







